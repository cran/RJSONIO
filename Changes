
RJSONIO

Version 0.5-0

  *  Enhancements to disambiguate serializing empty lists from as empty arrays or associative 
     arrays.  See also emptyNamedList to map to {}. 

  *  Method for identifying an R scalar that should be mapped to a JSON array via the 
     AsIs class and I() function.

  *  toJSON() honors these also ensuring transformation from JSON to R to JSON
     preserves the same structure.

     Both changes thanks to suggestions by Keith Bonawitz.

Version 0.4-2

  *  Fixed significant memory leaks found by Keith Bonawitz


Version 0.4-1

  *  Tidied up C++ code from libjsonio to avoid a warning about no
     argument to initializeFetch() when compiling the C++ code.

  *  Fixed a C routine (R_fromJSON) that did not return a value.

Version 0.4-0

  *  fromJSON() now uses libjson for the native parsing
     and a C routine to transform the resulting tree into R.
     This leads to a considerable speedup in parsing documents,
     approximately a factor of 200 over the customizable, event
     driven mechanism in earlier versions and still available 
     in this package via the basicJSONHandler()
     function and fromJSON().

Version 0.3-4

  *  Refinement of handling large integers that do not fit into a 4 byte int.
Tested on Windows.



Version 0.3-3

  *  Handle large integers that do not fit into a 4 byte int. Return as numeric values.



Version 0.3-1
Convert factors to character vectors in toJSON() and then serialize.



Version 0.2-4

  *  Handles UTF-8 content  as input. We convert the text to raw and then integer
values.



Version 0.2-3

  *  (Minor) Change to the C code to make it compile on Windows.



Version 0.2-2

  *  named atomic/primitive vectors serialized as associative arrays rather
than simple arrays.



Version 0.2-1

  *  names on R objects from associative arrays from JSON were in reverse order.



Version 0.2-0

  *  Scalar, by default, values are represented in JSON as scalars and not
arrays of length 1.  One can control this via the
container parameter in toJSON().


